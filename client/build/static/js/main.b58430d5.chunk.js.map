{"version":3,"sources":["components/modals/EditTask.js","components/Task.js","components/modals/AddTask.js","components/Column.js","components/Board.js","components/modals/AddCol.js","components/Header.js","components/App.js","index.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","display","flexDirection","EditTask","data","editCard","React","open","setOpen","cardDescValueRef","useRef","handleClose","validCardTitleValue","setvalidCardTitleValue","state","status","setStatus","cardTitleValueRef","cardDateValueRef","Button","onClick","size","Modal","onClose","Box","sx","Typography","id","variant","mb","mt","TextField","my","label","type","inputRef","required","defaultValue","title","onChange","error","description","FormControl","component","FormLabel","RadioGroup","row","name","e","val","value","FormControlLabel","control","Radio","deadline","color","current","length","Task","removeCard","index","stateColor","draggableId","toString","provided","Card","draggableProps","dragHandleProps","ref","innerRef","maxWidth","marginTop","CardContent","Paper","elevation","background","fontSize","padding","fontWeight","gutterBottom","wordBreak","CardActions","AddTask","addCard","defaultStatusValue","format","Date","Column","removeCol","removeCardAddColId","cardId","editCardAddColId","cardData","Grid","item","container","direction","xs","md","lg","xl","align","justifyContent","paddingTop","marginBottom","startIcon","droppableId","droppableProps","cards","map","placeholder","Board","columns","cardColSwitch","key","AddCol","addColumn","validColTitleValue","setvalidColTitleValue","colTitleValueRef","Fab","Header","App","useState","setColumns","isLoaded","setIsLoaded","setError","baseUrl","errorCheckJson","response","ok","json","Error","errorCheck","useEffect","fetch","then","res","board","sort","a","b","err","console","log","onDragEnd","result","destination","oldColId","parseInt","source","newColId","tmpColumns","slice","oldColIndex","findIndex","newColIndex","tmpCard","splice","method","headers","body","JSON","stringify","newPos","resp","alignItems","column","push","columnId","card","colIndex","darkTheme","createTheme","palette","mode","ReactDOM","render","ThemeProvider","theme","LocalizationProvider","dateAdapter","DateAdapter","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b58430d5.chunk.js","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useRef } from 'react';\nimport {\n\tTextField,\n\tFormControl,\n\tFormLabel,\n\tRadioGroup,\n\tFormControlLabel,\n\tRadio,\n} from '@mui/material';\n\nconst style = {\n\tposition: 'absolute',\n\ttop: '50%',\n\tleft: '50%',\n\ttransform: 'translate(-50%, -50%)',\n\twidth: 400,\n\tbgcolor: 'background.paper',\n\tborder: '2px solid #000',\n\tboxShadow: 24,\n\tp: 4,\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n};\n\nconst EditTask = ({ data, editCard }) => {\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst cardDescValueRef = useRef();\n\tconst handleOpen = () => {\n\t\tsetOpen(true);\n\t};\n\tconst handleClose = () => setOpen(false);\n\n\tconst [validCardTitleValue, setvalidCardTitleValue] =\n\t\tReact.useState('pending');\n\n\tconst [status, setStatus] = React.useState(data.state);\n\n\tconst cardTitleValueRef = useRef();\n\tconst cardDateValueRef = useRef();\n\n\tconst updateStatus = (e, val) => {\n\t\tsetStatus(val);\n\t};\n\treturn (\n\t\t<div display='block'>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\thandleOpen();\n\t\t\t\t}}\n\t\t\t\tsize='small'\n\t\t\t>\n\t\t\t\tEdit\n\t\t\t</Button>\n\t\t\t<Modal\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby='modal-modal-title'\n\t\t\t>\n\t\t\t\t<Box sx={style}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tid='modal-modal-title'\n\t\t\t\t\t\tvariant='h5'\n\t\t\t\t\t\tsx={{ mb: '1rem', mt: '1rem' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tEdit Card\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tlabel='Title'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tinputRef={cardTitleValueRef}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tdefaultValue={data.title}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tvalidCardTitleValue || setvalidCardTitleValue(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={!validCardTitleValue}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tdefaultValue={data.description}\n\t\t\t\t\t\tinputRef={cardDescValueRef}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControl component='fieldset'>\n\t\t\t\t\t\t<FormLabel component='legend'>Status</FormLabel>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\taria-label='status'\n\t\t\t\t\t\t\tname='row-radio-buttons-group'\n\t\t\t\t\t\t\tonChange={updateStatus}\n\t\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue='Pending'\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\tlabel='Pending'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue='Progress'\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\tlabel='In Progress'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControlLabel value='Done' control={<Radio />} label='Done' />\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue='Postponed'\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\tlabel='Postponed'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid='date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tdefaultValue={data.deadline}\n\t\t\t\t\t\tinputRef={cardDateValueRef}\n\t\t\t\t\t\tsx={{ width: 220, my: '1rem' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (cardTitleValueRef.current.value.length <= 0) {\n\t\t\t\t\t\t\t\tsetvalidCardTitleValue(false);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\teditCard(data.id, [\n\t\t\t\t\t\t\t\tcardTitleValueRef.current.value,\n\t\t\t\t\t\t\t\tcardDescValueRef.current.value,\n\t\t\t\t\t\t\t\tcardDateValueRef.current.value,\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default EditTask;\n","import React from 'react';\nimport {\n\tCard,\n\tTypography,\n\tCardContent,\n\tCardActions,\n\tButton,\n} from '@mui/material';\nimport { Draggable } from 'react-beautiful-dnd';\nimport EditTask from './modals/EditTask';\nimport Paper from '@mui/material/Paper';\n\nconst Task = ({ data, removeCard, index, editCard }) => {\n\tconst stateColor = (state) => {\n\t\tswitch (state) {\n\t\t\tcase 'Pending':\n\t\t\t\treturn '#b28704';\n\t\t\tcase 'Postponed':\n\t\t\t\treturn '#aa2e25';\n\t\t\tcase 'Progress':\n\t\t\t\treturn '#482880';\n\t\t\tcase 'Done':\n\t\t\t\treturn '#357a38';\n\t\t\tdefault:\n\t\t\t\treturn 'grey';\n\t\t}\n\t};\n\treturn (\n\t\t<Draggable key={data.id} draggableId={data.id.toString()} index={index}>\n\t\t\t{(provided) => (\n\t\t\t\t<Card\n\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t\t\tmarginTop: '1rem',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\televation={0}\n\t\t\t\t\t\t\tsx={{ width: 'fit-content', background: stateColor(data.state) }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tsx={{ fontSize: 14, padding: '5px', fontWeight: 'bold' }}\n\t\t\t\t\t\t\t\tcolor='text.secondary'\n\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{data.state}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Paper>\n\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant='h5'\n\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t\tsx={{ wordBreak: 'break-all' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{data.title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tsx={{ mb: 1.5, wordBreak: 'break-all' }}\n\t\t\t\t\t\t\tcolor='text.secondary'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{data.description}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='body2'>{data.deadline}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tremoveCard(data.id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<EditTask data={data} editCard={editCard} />\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t)}\n\t\t</Draggable>\n\t);\n};\n\nexport default Task;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useRef } from 'react';\nimport { format } from 'date-fns';\n\nimport {\n\tTextField,\n\tFormControl,\n\tFormLabel,\n\tRadioGroup,\n\tFormControlLabel,\n\tRadio,\n} from '@mui/material';\n\nconst style = {\n\tposition: 'absolute',\n\ttop: '50%',\n\tleft: '50%',\n\ttransform: 'translate(-50%, -50%)',\n\twidth: 400,\n\tbgcolor: 'background.paper',\n\tborder: '2px solid #000',\n\tboxShadow: 24,\n\tp: 4,\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n};\n\nconst AddTask = ({ data, addCard }) => {\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst handleOpen = () => setOpen(true);\n\tconst handleClose = () => setOpen(false);\n\n\tconst [validCardTitleValue, setvalidCardTitleValue] =\n\t\tReact.useState('pending');\n\n\tconst defaultStatusValue = 'Pending';\n\tconst [status, setStatus] = React.useState(defaultStatusValue);\n\tconst cardTitleValueRef = useRef();\n\tconst cardDateValueRef = useRef();\n\tconst cardDescValueRef = useRef();\n\n\tconst updateStatus = (e, val) => {\n\t\tsetStatus(val);\n\t};\n\n\treturn (\n\t\t<div display='block'>\n\t\t\t<Button variant='contained' onClick={handleOpen}>\n\t\t\t\tNew card\n\t\t\t</Button>\n\t\t\t<Modal\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby='modal-modal-title'\n\t\t\t>\n\t\t\t\t<Box sx={style}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tid='modal-modal-title'\n\t\t\t\t\t\tvariant='h5'\n\t\t\t\t\t\tsx={{ mb: '1rem', mt: '1rem' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd new Card\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tlabel='Title'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tinputRef={cardTitleValueRef}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tvalidCardTitleValue || setvalidCardTitleValue(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={!validCardTitleValue}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tinputRef={cardDescValueRef}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControl component='fieldset'>\n\t\t\t\t\t\t<FormLabel component='legend'>Status</FormLabel>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\taria-label='status'\n\t\t\t\t\t\t\tname='row-radio-buttons-group'\n\t\t\t\t\t\t\tonChange={updateStatus}\n\t\t\t\t\t\t\tdefaultValue={defaultStatusValue}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue='Pending'\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\tlabel='Pending'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue='Progress'\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\tlabel='In Progress'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControlLabel value='Done' control={<Radio />} label='Done' />\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue='Postponed'\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\tlabel='Postponed'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid='date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tdefaultValue={format(new Date(), 'yyyy-MM-dd')}\n\t\t\t\t\t\tinputRef={cardDateValueRef}\n\t\t\t\t\t\tsx={{ width: 220, my: '1rem' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (cardTitleValueRef.current.value.length <= 0) {\n\t\t\t\t\t\t\t\tsetvalidCardTitleValue(false);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\taddCard(\n\t\t\t\t\t\t\t\tdata.id,\n\t\t\t\t\t\t\t\tcardTitleValueRef.current.value,\n\t\t\t\t\t\t\t\tcardDescValueRef.current.value,\n\t\t\t\t\t\t\t\tcardDateValueRef.current.value,\n\t\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Card\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default AddTask;\n","import { Grid, Typography, Button } from '@mui/material';\nimport Task from './Task';\nimport AddTask from './modals/AddTask';\nimport { Droppable } from 'react-beautiful-dnd';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport React from 'react';\n\nconst Column = ({ addCard, removeCard, data, editCard, removeCol }) => {\n\tconst removeCardAddColId = (cardId) => {\n\t\tremoveCard(data.id, cardId);\n\t};\n\tconst editCardAddColId = (id, cardData) => {\n\t\teditCard(data.id, id, ...cardData);\n\t};\n\n\tconst renderCards = () => {\n\t\treturn data.cards.map((item, index) => {\n\t\t\treturn (\n\t\t\t\t<Task\n\t\t\t\t\tdata={item}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tremoveCard={removeCardAddColId}\n\t\t\t\t\tindex={index}\n\t\t\t\t\teditCard={editCardAddColId}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tcontainer\n\t\t\tdirection='column'\n\t\t\txs={6}\n\t\t\tmd={6}\n\t\t\tlg={3}\n\t\t\txl={2}\n\t\t\tsx={{ padding: '1rem' }}\n\t\t>\n\t\t\t<Grid item>\n\t\t\t\t<Typography variant='h4' align='center'>\n\t\t\t\t\t{data.title}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\tcontainer\n\t\t\t\tdirection='row'\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\tsx={{ paddingTop: '1rem' }}\n\t\t\t>\n\t\t\t\t<AddTask addCard={addCard} data={data} sx={{ marginBottom: '1rem' }} />\n\n\t\t\t\t<Button\n\t\t\t\t\taria-label='delete'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tremoveCol(data.id);\n\t\t\t\t\t}}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tstartIcon={<DeleteForeverIcon fontSize='inherit' />}\n\t\t\t\t>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Droppable droppableId={data.id.toString()}>\n\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t<div ref={provided.innerRef} {...provided.droppableProps}>\n\t\t\t\t\t\t\t{renderCards()}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Column;\n","import { Grid } from '@mui/material';\nimport Column from './Column';\nimport React from 'react';\n\nconst Board = ({\n\tcolumns,\n\taddCard,\n\tremoveCard,\n\tcardColSwitch,\n\teditCard,\n\tremoveCol,\n}) => {\n\tconst renderColumns = () => {\n\t\treturn columns.map((item, key) => {\n\t\t\treturn (\n\t\t\t\t<Column\n\t\t\t\t\tkey={key}\n\t\t\t\t\tdata={item}\n\t\t\t\t\taddCard={addCard}\n\t\t\t\t\tremoveCard={removeCard}\n\t\t\t\t\tcardColSwitch={cardColSwitch}\n\t\t\t\t\teditCard={editCard}\n\t\t\t\t\tremoveCol={removeCol}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<Grid container direction='row' item>\n\t\t\t{renderColumns()}\n\t\t</Grid>\n\t);\n};\n\nexport default Board;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { useRef } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport { TextField, Fab } from '@mui/material';\n\nconst style = {\n\tposition: 'absolute',\n\ttop: '50%',\n\tleft: '50%',\n\ttransform: 'translate(-50%, -50%)',\n\twidth: 400,\n\tbgcolor: 'background.paper',\n\tborder: '2px solid #000',\n\tboxShadow: 24,\n\tp: 4,\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n};\n\nconst AddCol = ({ addColumn }) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst [validColTitleValue, setvalidColTitleValue] = React.useState(true);\n\tconst handleOpen = () => setOpen(true);\n\tconst handleClose = () => setOpen(false);\n\n\tconst colTitleValueRef = useRef('');\n\treturn (\n\t\t<div>\n\t\t\t<Fab\n\t\t\t\tvariant='extended'\n\t\t\t\taria-label='add'\n\t\t\t\tonClick={handleOpen}\n\t\t\t\tcolor='secondary'\n\t\t\t>\n\t\t\t\t<AddIcon />\n\t\t\t\tNew Column\n\t\t\t</Fab>\n\t\t\t<Modal\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby='modal-modal-title'\n\t\t\t>\n\t\t\t\t<Box sx={style}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tid='modal-modal-title'\n\t\t\t\t\t\tvariant='h5'\n\t\t\t\t\t\tsx={{ mt: '1rem', padding: 0 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd new column\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tid='outlined-title-input'\n\t\t\t\t\t\tlabel='Title'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tinputRef={colTitleValueRef}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tvalidColTitleValue || setvalidColTitleValue(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={!validColTitleValue}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsx={{ my: '1rem' }}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (colTitleValueRef.current.value.length > 0) {\n\t\t\t\t\t\t\t\taddColumn(colTitleValueRef.current.value);\n\t\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetvalidColTitleValue(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Column\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default AddCol;\n","import React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport AddCol from './modals/AddCol';\n\nconst Header = ({ addColumn }) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\txs={12}\n\t\t\tcontainer\n\t\t\tdirection='column'\n\t\t\tsx={{ marginBottom: '1rem' }}\n\t\t>\n\t\t\t<Grid item>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant='h2'\n\t\t\t\t\talign='center'\n\t\t\t\t\tsx={{ marginTop: '3rem', marginBottom: '3rem' }}\n\t\t\t\t>\n\t\t\t\t\tKanban Board\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<AddCol addColumn={addColumn} />\n\t\t\t<Grid item></Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Header;\n","import { Grid } from '@mui/material';\nimport Board from './Board';\nimport Header from './Header';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\tconst [columns, setColumns] = useState([]);\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [error, setError] = useState(false);\n\tconst baseUrl = 'http://localhost:5000';\n\n\tconst errorCheckJson = (response) => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t} else {\n\t\t\tthrow new Error('Something went wrong');\n\t\t}\n\t};\n\tconst errorCheck = (response) => {\n\t\tif (response.ok) {\n\t\t\treturn response;\n\t\t} else {\n\t\t\tthrow new Error('Something went wrong');\n\t\t}\n\t};\n\n\t/// initially getting the data from server\n\tuseEffect(() => {\n\t\tfetch(baseUrl + '/api/column/board/')\n\t\t\t.then((res) => errorCheckJson(res))\n\t\t\t.then(\n\t\t\t\t(board) => {\n\t\t\t\t\tsetIsLoaded(true);\n\t\t\t\t\tfor (const column of board) {\n\t\t\t\t\t\tcolumn.cards.sort((a, b) => a.position - b.position);\n\t\t\t\t\t}\n\t\t\t\t\tsetColumns(board);\n\t\t\t\t},\n\n\t\t\t\t(err) => {\n\t\t\t\t\tsetError(true);\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t);\n\t}, []);\n\n\tconst addColumn = (title) => {\n\t\tfetch(baseUrl + '/api/column/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ title: title }),\n\t\t})\n\t\t\t.then((res) => errorCheckJson(res))\n\t\t\t.then(\n\t\t\t\t(column) => {\n\t\t\t\t\tlet tmpColumns = columns.slice();\n\t\t\t\t\ttmpColumns.push({ id: column.id, title: column.title, cards: [] });\n\t\t\t\t\tsetColumns(tmpColumns);\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tconst removeCol = (columnId) => {\n\t\tfetch(baseUrl + '/api/column/' + columnId, {\n\t\t\tmethod: 'DELETE',\n\t\t})\n\t\t\t.then((res) => errorCheck(res))\n\t\t\t.then(\n\t\t\t\t() => {\n\t\t\t\t\tlet tmpColumns = columns.slice();\n\t\t\t\t\tconst index = tmpColumns.findIndex((item) => item.id === columnId);\n\t\t\t\t\ttmpColumns.splice(index, 1);\n\t\t\t\t\tsetColumns(tmpColumns);\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tconst addCard = (columnId, title, description, deadline, state) => {\n\t\tfetch(baseUrl + '/api/card/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcolumnId: columnId,\n\t\t\t\ttitle: title,\n\t\t\t\tdescription: description,\n\t\t\t\tdeadline: deadline,\n\t\t\t\tstate: state,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => errorCheckJson(res))\n\t\t\t.then(\n\t\t\t\t(card) => {\n\t\t\t\t\tlet tmpColumns = columns.slice();\n\t\t\t\t\tconst colIndex = tmpColumns.findIndex((item) => item.id === columnId);\n\t\t\t\t\ttmpColumns[colIndex].cards.push({\n\t\t\t\t\t\tcolumnId: columnId,\n\t\t\t\t\t\tid: card.id,\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tdescription: description,\n\t\t\t\t\t\tdeadline: deadline,\n\t\t\t\t\t\tstate: state,\n\t\t\t\t\t});\n\t\t\t\t\tsetColumns(tmpColumns);\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\t// TODO\n\tconst editCard = (columnId, cardId, title, description, deadline, state) => {\n\t\tfetch(baseUrl + '/api/card/' + cardId, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tid: cardId,\n\t\t\t\ttitle: title,\n\t\t\t\tdescription: description,\n\t\t\t\tdeadline: deadline,\n\t\t\t\tstate: state,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => errorCheckJson(res))\n\t\t\t.then(\n\t\t\t\t(card) => {\n\t\t\t\t\tif (card.id !== cardId) setError(true);\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t);\n\t\tlet tmpColumns = columns.slice();\n\t\tconst colIndex = tmpColumns.findIndex((item) => item.id === columnId);\n\t\tconst index = tmpColumns[colIndex].cards.findIndex(\n\t\t\t(item) => item.id === cardId\n\t\t);\n\t\tif (index > -1) {\n\t\t\ttmpColumns[colIndex].cards[index].title = title;\n\t\t\ttmpColumns[colIndex].cards[index].description = description;\n\t\t\ttmpColumns[colIndex].cards[index].deadline = deadline;\n\t\t\ttmpColumns[colIndex].cards[index].state = state;\n\t\t}\n\t\tsetColumns(tmpColumns);\n\t};\n\n\tconst removeCard = (columnId, cardId) => {\n\t\tfetch(baseUrl + '/api/card/' + cardId, {\n\t\t\tmethod: 'DELETE',\n\t\t})\n\t\t\t.then((res) => errorCheck(res))\n\t\t\t.then(\n\t\t\t\t(resp) => {\n\t\t\t\t\tif (resp.status === 200) {\n\t\t\t\t\t\tlet tmpColumns = columns.slice();\n\t\t\t\t\t\tconst colIndex = tmpColumns.findIndex(\n\t\t\t\t\t\t\t(item) => item.id === columnId\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst index = tmpColumns[colIndex].cards.findIndex(\n\t\t\t\t\t\t\t(item) => item.id === cardId\n\t\t\t\t\t\t);\n\t\t\t\t\t\tindex > -1 && tmpColumns[colIndex].cards.splice(index, 1);\n\t\t\t\t\t\tsetColumns(tmpColumns);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetError(true);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tconst cardColSwitch = (result) => {\n\t\tif (!result.destination) {\n\t\t\treturn;\n\t\t}\n\t\tconst oldColId = parseInt(result.source.droppableId);\n\t\tconst newColId = parseInt(result.destination.droppableId);\n\t\tconst cardId = parseInt(result.draggableId);\n\t\tlet tmpColumns = columns.slice();\n\n\t\tconst oldColIndex = tmpColumns.findIndex((item) => item.id === oldColId);\n\t\tconst newColIndex = tmpColumns.findIndex((item) => item.id === newColId);\n\n\t\t// finding the card\n\t\tconst index = tmpColumns[oldColIndex].cards.findIndex(\n\t\t\t(item) => item.id === cardId\n\t\t);\n\n\t\tconst tmpCard = tmpColumns[oldColIndex].cards[index];\n\t\ttmpColumns[oldColIndex].cards.splice(index, 1);\n\t\ttmpColumns[newColIndex].cards.splice(result.destination.index, 0, tmpCard);\n\n\t\tsetColumns(tmpColumns);\n\t\tfetch(baseUrl + '/api/card/' + cardId + '/location/', {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcardId: cardId,\n\t\t\t\tnewColId: newColId,\n\t\t\t\tnewPos: result.destination.index,\n\t\t\t}),\n\t\t}).then(\n\t\t\t(resp) => {\n\t\t\t\tif (resp.status !== 200) {\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetError(true);\n\t\t\t}\n\t\t);\n\t};\n\tif (error) return <h1>Error occured, please refresh</h1>;\n\tif (isLoaded) {\n\t\treturn (\n\t\t\t<DragDropContext onDragEnd={cardColSwitch}>\n\t\t\t\t<Grid container alignItems='center' justifyContent='center'>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\txs={10}\n\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t>\n\t\t\t\t\t\t<Header addColumn={addColumn} />\n\t\t\t\t\t\t<Board\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\taddCard={addCard}\n\t\t\t\t\t\t\tremoveCard={removeCard}\n\t\t\t\t\t\t\teditCard={editCard}\n\t\t\t\t\t\t\tremoveCol={removeCol}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DragDropContext>\n\t\t);\n\t}\n\treturn <h1>Loading...</h1>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { createTheme, ThemeProvider, CssBaseline } from '@mui/material';\nimport DateAdapter from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nconst darkTheme = createTheme({\n\tpalette: {\n\t\tmode: 'dark',\n\t},\n});\nReactDOM.render(\n\t<ThemeProvider theme={darkTheme}>\n\t\t<LocalizationProvider dateAdapter={DateAdapter}>\n\t\t\t<CssBaseline />\n\t\t\t<App />\n\t\t</LocalizationProvider>\n\t</ThemeProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}